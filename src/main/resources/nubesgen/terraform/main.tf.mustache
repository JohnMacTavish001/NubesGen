terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = ">= 2.75"
    }
    azurecaf = {
      source = "aztfmod/azurecaf"
      version = "1.2.6"
    }
  }
{{#gitops}}
  backend "azurerm" {}
{{/gitops}}
}

provider "azurerm" {
  features {}
}

locals {
  // If an environment is set up (dev, test, prod...), it is used in the application name
  environment      = var.environment == "" ? "dev" : var.environment
}

resource "azurecaf_name" "resource_group" {
  name            = var.application_name
  resource_type   = "azurerm_resource_group"
  suffixes        = [local.environment]
}

resource "azurerm_resource_group" "main" {
  name     = azurecaf_name.resource_group.result
  location = var.location

  tags = {
    "terraform"        = "true"
    "environment"      = local.environment
    "application-name" = var.application_name
{{#gitops}}

    // Name of the Azure Storage Account that stores the Terraform state
    "terraform_storage_account" = var.terraform_storage_account
{{/gitops}}
  }
}

module "application" {
{{#applicationTypeAppService}}
  source           = "./modules/app-service"
{{/applicationTypeAppService}}
{{#applicationTypeFunction}}
  source           = "./modules/function"
{{/applicationTypeFunction}}
{{#applicationTypeSpringCloud}}
  source           = "./modules/spring-cloud"
{{/applicationTypeSpringCloud}}
  resource_group   = azurerm_resource_group.main.name
  application_name = var.application_name
  environment      = local.environment
  location         = var.location
{{#databaseTypeMysql}}
{{#applicationTypeSpringCloud}}

  azure_database_id   = module.database.database_id
  azure_database_name = module.database.database_name
{{/applicationTypeSpringCloud}}
{{/databaseTypeMysql}}
{{^databaseTypeNone}}

  database_url      = module.database.database_url
  {{^addonKeyVault}}
  database_username = module.database.database_username
  database_password = module.database.database_password
  {{/addonKeyVault}}
  {{#addonKeyVault}}
  {{^applicationTypeSpringCloud}}
  database_username = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/database-username)"
  database_password = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/database-password)"
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}
  {{#databaseTypeMysql}}
  database_username = module.database.database_username
  database_password = module.database.database_password
  {{/databaseTypeMysql}}
  {{^databaseTypeMysql}}
  database_username = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/database-username)"
  database_password = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/database-password)"
  {{/databaseTypeMysql}}
  {{/applicationTypeSpringCloud}}
  {{/addonKeyVault}}
{{/databaseTypeNone}}
{{#addonApplicationInsights}}

  {{^applicationTypeSpringCloud}}
  azure_application_insights_instrumentation_key = module.application-insights.azure_application_insights_instrumentation_key
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}
  azure_application_insights_connection_string = module.application-insights.azure_application_insights_connection_string
  {{/applicationTypeSpringCloud}}
{{/addonApplicationInsights}}
{{#addonKeyVault}}

  vault_id = module.key-vault.vault_id
{{/addonKeyVault}}
{{#addonRedis}}

  {{^applicationTypeSpringCloud}}
  azure_redis_host     = module.redis.azure_redis_host
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}
  azure_redis_id     = module.redis.azure_redis_id
  {{/applicationTypeSpringCloud}}
  {{^addonKeyVault}}
  azure_redis_password = module.redis.azure_redis_password
  {{/addonKeyVault}}
  {{#addonKeyVault}}
  {{^applicationTypeSpringCloud}}
  azure_redis_password = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/redis-password)"
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}
  azure_redis_password = module.redis.azure_redis_password
  {{/applicationTypeSpringCloud}}
  {{/addonKeyVault}}
{{/addonRedis}}
{{#addonStorageBlob}}

  azure_storage_account_name  = module.storage-blob.azurerm_storage_account_name
  azure_storage_blob_endpoint = module.storage-blob.azurerm_storage_blob_endpoint
  {{^addonKeyVault}}
  azure_storage_account_key   = module.storage-blob.azurerm_storage_account_key
  {{/addonKeyVault}}
  {{#addonKeyVault}}
  azure_storage_account_key   = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/storage-account-key)"
  {{/addonKeyVault}}
{{/addonStorageBlob}}
{{#addonCosmosdbMongodb}}

  azure_cosmosdb_mongodb_database = module.cosmosdb-mongodb.azure_cosmosdb_mongodb_database
  {{#applicationTypeSpringCloud}}
  azure_cosmosdb_account_id       = module.cosmosdb-mongodb.azure_cosmosdb_account_id
  {{/applicationTypeSpringCloud}}
  {{^addonKeyVault}}
  {{^applicationTypeSpringCloud}}
  azure_cosmosdb_mongodb_uri      = module.cosmosdb-mongodb.azure_cosmosdb_mongodb_uri
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}  
  azure_cosmosdb_mongodb_key      = module.cosmosdb-mongodb.azure_cosmosdb_account_key
  {{/applicationTypeSpringCloud}}
  {{/addonKeyVault}}
  {{#addonKeyVault}}
  {{^applicationTypeSpringCloud}}
  azure_cosmosdb_mongodb_uri      = "@Microsoft.KeyVault(SecretUri=${module.key-vault.vault_uri}secrets/cosmosdb-mongodb-uri)"
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}
  azure_cosmosdb_mongodb_key      = module.cosmosdb-mongodb.azure_cosmosdb_account_key
  {{/applicationTypeSpringCloud}}
  {{/addonKeyVault}}
{{/addonCosmosdbMongodb}}
}
{{^databaseTypeNone}}

module "database" {
  {{#databaseTypeSqlServer}}
  source           = "./modules/sql-server"
  {{/databaseTypeSqlServer}}
  {{#databaseTypeMysql}}
  source           = "./modules/mysql"
  {{/databaseTypeMysql}}
  {{#databaseTypePostgresql}}
  source           = "./modules/postgresql"
  {{/databaseTypePostgresql}}
  resource_group   = azurerm_resource_group.main.name
  application_name = var.application_name
  environment      = local.environment
  location         = var.location
}
{{/databaseTypeNone}}
{{#addonApplicationInsights}}

module "application-insights" {
  source            = "./modules/application-insights"
  resource_group    = azurerm_resource_group.main.name
  application_name  = var.application_name
  environment       = local.environment
  location          = var.location
}
{{/addonApplicationInsights}}
{{#addonKeyVault}}

module "key-vault" {
  source           = "./modules/key-vault"
  resource_group   = azurerm_resource_group.main.name
  application_name = var.application_name
  environment      = local.environment
  location         = var.location
  {{^databaseTypeNone}}

  database_username = module.database.database_username
  database_password = module.database.database_password
  {{/databaseTypeNone}}
  {{#addonRedis}}

  redis_password = module.redis.azure_redis_password
  {{/addonRedis}}
  {{#addonStorageBlob}}

  storage_account_key=module.storage-blob.azurerm_storage_account_key
  {{/addonStorageBlob}}
  {{#addonCosmosdbMongodb}}

  {{^applicationTypeSpringCloud}}
  cosmosdb_mongodb_uri=module.cosmosdb-mongodb.azure_cosmosdb_mongodb_uri
  {{/applicationTypeSpringCloud}}
  {{#applicationTypeSpringCloud}}
  {{/applicationTypeSpringCloud}}
  cosmosdb_account_id=module.cosmosdb-mongodb.azure_cosmosdb_account_id
  cosmosdb_mongodb_database=module.cosmosdb-mongodb.azure_cosmosdb_mongodb_database
  cosmosdb_mongodb_key=module.cosmosdb-mongodb.azure_cosmosdb_account_key
  {{/addonCosmosdbMongodb}}
}
{{/addonKeyVault}}
{{#addonRedis}}

module "redis" {
  source            = "./modules/redis"
  resource_group    = azurerm_resource_group.main.name
  application_name  = var.application_name
  environment       = local.environment
  location          = var.location
}
{{/addonRedis}}
{{#addonStorageBlob}}

module "storage-blob" {
  source           = "./modules/storage-blob"
  resource_group   = azurerm_resource_group.main.name
  application_name = var.application_name
  environment      = local.environment
  location         = var.location
}
{{/addonStorageBlob}}
{{#addonCosmosdbMongodb}}

module "cosmosdb-mongodb" {
  source           = "./modules/cosmosdb-mongodb"
  resource_group   = azurerm_resource_group.main.name
  application_name = var.application_name
  environment      = local.environment
  location         = var.location
}
{{/addonCosmosdbMongodb}}
